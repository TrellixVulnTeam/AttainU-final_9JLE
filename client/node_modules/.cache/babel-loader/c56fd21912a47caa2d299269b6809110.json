{"ast":null,"code":"var _jsxFileName = \"E:\\\\attainu\\\\client\\\\src\\\\components\\\\login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserContext } from '../../App';\nimport M from 'materialize-css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signin = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const history = useHistory();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const PostData = () => {\n    if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      M.toast({\n        html: \"Invalid email\",\n        classes: \"#c62828 red darken-3\"\n      });\n      return;\n    }\n\n    fetch(\"http://localhost:3000/signin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"#c62828 red darken-3\"\n        });\n      } else {\n        localStorage.setItem(\"jwt\", data.token);\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n        dispatch({\n          type: \"USER\",\n          payload: data.user\n        });\n        M.toast({\n          html: \"signed successful\",\n          classes: \"#43a047 green darken-1\"\n        });\n        history.push('/');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mycard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card auth-card input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn waves-effect waves-light #64b5f6 blue darken-1\",\n        onClick: () => PostData(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"Signup\",\n          children: \"Don't have an account? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signin, \"3C6IpRUAMcTtloQ4Zmn9m+F/QTs=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["E:/attainu/client/src/components/login/Login.js"],"names":["React","useState","useContext","Link","useHistory","UserContext","M","Signin","state","dispatch","history","password","setPassword","email","setEmail","PostData","test","toast","html","classes","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","error","localStorage","setItem","token","user","type","payload","push","catch","err","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useContext,} from 'react'; \r\nimport { Link,useHistory } from \"react-router-dom\";\r\nimport {UserContext} from '../../App'\r\nimport M from 'materialize-css'\r\n\r\nconst Signin =()=>{\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password,setPassword]=useState(\"\")\r\n    const [email,setEmail]=useState(\"\")\r\n    const PostData =()=>{\r\n        if(!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"Invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return \r\n        }\r\n        fetch(\"http://localhost:3000/signin\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n            }\r\n            else{\r\n                localStorage.setItem(\"jwt\",data.token)\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                dispatch({type:\"USER\",payload:data.user})\r\n                M.toast({html:\"signed successful\",classes:\"#43a047 green darken-1\"})\r\n                history.push('/')\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n              <h2>Instagram</h2>\r\n              <input\r\n               type=\"text\"\r\n               placeholder=\"email\"\r\n               value={email}\r\n               onChange = {(e)=>setEmail(e.target.value)}\r\n              />\r\n              <input\r\n               type=\"password\"\r\n               placeholder=\"password\"\r\n               value={password}\r\n               onChange = {(e)=>setPassword(e.target.value)}\r\n              />\r\n                 <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                 onClick={()=>PostData()}\r\n                 >\r\n                Login\r\n            </button>\r\n            <h5>\r\n                <Link to=\"Signup\">Don't have an account? </Link>\r\n            </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Signin"]},"metadata":{},"sourceType":"module"}